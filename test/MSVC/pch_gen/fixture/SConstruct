# pch_gen fixture's SConstruct

DefaultEnvironment(tools=[])
# TODO:  this is order-dependent (putting 'mssdk' second or third breaks),
# and ideally we shouldn't need to specify the tools= list anyway.


# Add flag to cause pch_gen to return empty string
# This will enable testing that PCH if subst'd yields empty string will stop
# PCH from being enabled.
vars = Variables(None, ARGUMENTS)
vars.AddVariables(BoolVariable("DISABLE_PCH", help="Disable PCH functionality", default=False))


env = Environment(variables=vars, tools=["mssdk", "msvc", "mslink"])
env.Append(CCFLAGS="/DPCHDEF")
env["PDB"] = File("test.pdb")
env["PCHSTOP"] = "StdAfx.h"


def pch_gen(env, target, source, for_signature):
    if env['DISABLE_PCH']:
        return ""
    else:
        return "StdAfx-1.pch"


env["PCH"] = pch_gen
env.PCH("StdAfx-1.pch", "StdAfx.cpp")
env.Program("test", ["test.cpp", env.RES("test.rc")], LIBS=["user32"])

env.Object("fast", "foo.cpp")
env.Object("slow", "foo.cpp", PCH=0)