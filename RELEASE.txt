If you are reading this in the git repository, the contents
refer to *unreleased* changes since the last SCons release.
Past official release announcements appear at:

    https://scons.org/tag/releases.html

==================================================================

A new SCons release, 4.5.3, is now available on the SCons download page:

    https://scons.org/pages/download.html


Here is a summary of the changes since 4.5.2:

NEW FUNCTIONALITY
-----------------

- D compilers : added support for generation of .di interface files

DEPRECATED FUNCTIONALITY
------------------------

- List anything that's been deprecated since the last release

CHANGED/ENHANCED EXISTING FUNCTIONALITY
---------------------------------------

- List modifications to existing features, where the previous behavior
  wouldn't actually be considered a bug

FIXES
-----


- Fixed: when using the mingw tool, if an msys2 Python is used (os.sep
  is '/' rather than the Windows default '\'), certain Configure checks
  could fail due to the construction of the path to run the compiled check.
- C scanner's dictifyCPPDEFINES routine did not understand the possible
  combinations of CPPDEFINES - not aware of a "name=value" string either
  embedded in a sequence, or by itself.  The conditional C scanner thus
  did not always properly apply the defines. The regular C scanner does
  not use these, so was not affected.  [fixes #4193]

IMPROVEMENTS
------------

- List improvements that wouldn't be visible to the user in the
  documentation:  performance improvements (describe the circumstances
  under which they would be observed), or major code cleanups

PACKAGING
---------

- List changes in the way SCons is packaged and/or released

DOCUMENTATION
-------------

- Aligned manpage signature for Alias function to match implementation -
  if the previous *targets* parameter had been used as a keyword argument,
  the results would be incorrect (does not apply to positional argument
  usage, which had no problem).

DEVELOPMENT
-----------

- SCons test runner now uses pathlib to normalize and compare paths
  to test files, which allows test lists, exclude lists, and tests on
  the command line to "not care" about the OS convention for pathname
  separators.


Thanks to the following contributors listed below for their contributions to this release.
==========================================================================================
.. code-block:: text

    git shortlog --no-merges -ns 4.0.1..HEAD
